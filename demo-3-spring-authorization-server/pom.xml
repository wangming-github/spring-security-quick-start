<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>
    <name>模块三：新款authorization-server</name>

    <!--  4/4   模块三运行步骤 -->
    <parent>
        <groupId>com.maizi</groupId>
        <artifactId>spring-security-quick-start</artifactId>
        <version>1.0-SNAPSHOT</version>
    </parent>


    <artifactId>demo-3-spring-authorization-server</artifactId>


    <properties>
        <java.version>1.8</java.version> <!-- 当前使用的 Java 版本 -->
        <java.version.11>11</java.version.11> <!-- 支持 Java 11 版本 -->
        <java.version.17>17</java.version.17> <!-- 支持 Java 17 版本 -->
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding> <!-- 指定源文件的字符编码，这里设置为 UTF-8 -->
        <spring-boot.version>2.6.13</spring-boot.version>
    </properties>

    <dependencies>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-web</artifactId>
        </dependency>

        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-security</artifactId>
        </dependency>
        <dependency>
            <groupId>org.springframework.security</groupId>
            <artifactId>spring-security-oauth2-authorization-server</artifactId>
            <version>1.1.0</version>
        </dependency>

        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-test</artifactId>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.springframework.security</groupId>
            <artifactId>spring-security-test</artifactId>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.junit.jupiter</groupId>
            <artifactId>junit-jupiter</artifactId>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>junit</groupId>
            <artifactId>junit</artifactId>
            <scope>test</scope>
        </dependency>
    </dependencies>


    <build>
        <plugins>
            <!-- Maven 编译插件 -->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-compiler-plugin</artifactId>
                <version>3.8.1</version>
                <!-- 该插件用于编译 Java 源代码 -->
                <configuration>
                    <!-- 指定编译源代码的版本为 Java 17 -->
                    <source>${java.version.17}</source>
                    <!-- 指定编译后的字节码的版本为 Java 17 -->
                    <target>${java.version.17}</target>
                    <!-- 指定目标 Java 版本 元素用于指定编译器的 -release 选项，它有助于确保编译的字节码与目标 JDK 版本兼容。 -->
                    <!--<release>${java.version.17}</release>-->
                </configuration>
            </plugin>
        </plugins>
    </build>


</project>
